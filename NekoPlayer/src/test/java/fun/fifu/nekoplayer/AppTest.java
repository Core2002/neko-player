/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package fun.fifu.nekoplayer;

import cn.hutool.core.io.FileUtil;
import cn.hutool.core.io.IoUtil;
import cn.hutool.core.io.resource.ResourceUtil;
import cn.hutool.json.JSONObject;
import cn.hutool.json.JSONUtil;
import org.junit.Test;

import java.nio.charset.StandardCharsets;

public class AppTest {
    @Test public void test() {
        String[] x = IoUtil.read(ResourceUtil.getStream("bad-apple/568.txt"), StandardCharsets.UTF_8).split("\n");
        for (int i = 0; i < x.length; i++) {
            char[] y = x[i].toCharArray();
            for (int j = 0; j < y.length; j++) {
                switch (y[j]) {
                    case '1':
                        System.out.print('*');
                        break;
                    case ' ':
                        System.out.print(' ');
                        break;
                    default:
                        System.out.println();
                        break;
                }
            }

        }
    }

    @Test public void testConfigRead(){
        JSONObject jsonObject = JSONUtil.readJSONObject(FileUtil.file("config.json"), StandardCharsets.UTF_8);
        jsonObject.forEach((k, v) -> {
            System.out.println(k + " -> " + v);
        });
    }

    @Test public void badAppleTest(){
        ResourceUtil.getResourceIter("bad-apple").forEach(System.out::println);
    }

    @Test public void configBitTest(){
        JSONObject animation = JSONUtil.readJSONObject(FileUtil.file("config.json"), StandardCharsets.UTF_8).getJSONObject("bad-apple");
        Character blackBit = animation.getChar("black-bit",'1');
        Character whiteBit = animation.getChar("white-bit",' ');
        System.out.println(blackBit);
        System.out.println(whiteBit);
    }
}
